
package com.company.broadcastexample.ui;

import com.company.broadcastexample.core.Broadcaster;
import com.vaadin.flow.component.AttachEvent;
import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.DetachEvent;
import com.vaadin.flow.component.UI;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.html.Label;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.page.Push;
import com.vaadin.flow.component.textfield.TextField;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.server.InitialPageSettings;
import com.vaadin.flow.server.PageConfigurator;
import com.vaadin.flow.shared.Registration;


@Push
@Route("")
public class MainLayout extends VerticalLayout implements PageConfigurator
{

	Registration broadcasterRegistration;

	public MainLayout()
	{
		super();
		this.initUI();
	}

	@Override
	public void configurePage(final InitialPageSettings settings)
	{
		settings.addLink("shortcut icon", "frontend/images/favicon.ico");
		settings.addFavIcon("icon", "frontend/images/favicon256.png", "256x256");
	}

	@Override
	protected void onAttach(final AttachEvent attachEvent)
	{
		final UI ui = attachEvent.getUI();
		this.broadcasterRegistration = Broadcaster.register(newMessage -> {
			ui.access(() -> this.add(new Label(newMessage)));
		});
	}

	@Override
	protected void onDetach(final DetachEvent detachEvent)
	{
		this.broadcasterRegistration.remove();
		this.broadcasterRegistration = null;
	}

	/**
	 * Event handler delegate method for the {@link Button} {@link #button}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button_onClick(final ClickEvent<Button> event)
	{
		Broadcaster.broadcast(this.txtMessage.getValue());
		this.txtMessage.setValue("");
	}
	
	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.txtMessage = new TextField();
		this.button     = new Button();
		
		this.button.setText("Senden");
		
		this.txtMessage.setWidth("50%");
		this.txtMessage.setHeight(null);
		this.button.setSizeUndefined();
		this.add(this.txtMessage, this.button);
		this.setSizeFull();
		
		this.button.addClickListener(this::button_onClick);
	} // </generated-code>

	// <generated-code name="variables">
	private Button    button;
	private TextField txtMessage;
	// </generated-code>

}
